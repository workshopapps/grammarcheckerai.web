{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "h1vuxh3bomktv"
  },
  "info": {
    "title": "GrittyGrammarly",
    "version": "1.0",
    "description": "API endpoint test for the grammarcheckerai app"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Offline"
    },
    {
      "url": "",
      "description": "Online"
    }
  ],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "This Route Logs Existing User in",
        "operationId": "post-api-v1-login",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "Login route enables registered user to log into their account",
        "requestBody": {
          "$ref": "#/components/requestBodies/api_login"
        },
        "tags": [
          "Auth"
        ]
      },
      "parameters": []
    },
    "/api/v1/auth/signup": {
      "post": {
        "summary": "This Route creates new User",
        "operationId": "post-api-v1-signup",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "422": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "Signup route enables new user to regiter an account",
        "requestBody": {
          "$ref": "#/components/requestBodies/api_signup"
        },
        "tags": [
          "Auth"
        ]
      },
      "parameters": []
    },
    "/api/v1/user/delete_user": {
      "parameters": [],
      "delete": {
        "summary": "",
        "operationId": "deleteapi-v1-user-delete_user",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "delete_user route enables registered and verified user to delete their existing account",
        "requestBody": {
          "$ref": "#/components/requestBodies/api_delete"
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token",
            "required": true
          }
        ]
      }
    },
    "/api/v1/user/update_user/:userId": {
      "post": {
        "summary": "This Route Updates the User Details in the database",
        "operationId": "post-update_user-:userId",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "202": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "update_user route enables registered and verified user to update their existing account",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "userId",
            "description": "id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/api_update"
        }
      },
      "parameters": []
    },
    "/api/v1/user/profile/": {
      "parameters": [],
      "get": {
        "summary": "Get all the user in the database",
        "operationId": "get-api-v1-user-profile-:id",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "502": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "userId",
            "name": "id"
          }
        ],
        "tags": [
          "User"
        ],
        "description": "user_profile route gets registered and verified user tin the database"
      }
    },
    "/api/v1/auth/getBot": {
      "get": {
        "summary": "Unscripted Route",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "get-getBot",
        "description": "Converting Audio to text",
        "requestBody": {
          "$ref": "#/components/requestBodies/Audio"
        },
        "tags": [
          "Unscripted"
        ]
      },
      "parameters": []
    },
    "auth/v1/auth/failed": {
      "get": {
        "summary": "Unscripted Route",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "get-getBot",
        "description": "Converting Audio to text",
        "tags": [
          "Unscripted"
        ]
      },
      "parameters": []
    },
    "/api/v1/auth/getText": {
      "get": {
        "summary": "Unscripted Route",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "get-getText",
        "description": "Get transcribed text from Whisper",
        "tags": [
          "Unscripted"
        ]
      },
      "parameters": []
    },
    "/api/v1/sendAudio": {
      "post": {
        "summary": "",
        "operationId": "post-getConversation",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "This end point sends audio file to the bot",
        "tags": [
          "Conversation"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/sendAudio"
        }
      },
      "parameters": []
    },
    "/api/1/auth/request-reset-password": {
      "post": {
        "summary": "Unscripted Route",
        "operationId": "post-request-reset-password",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "Request for reseting user password",
        "requestBody": {
          "$ref": "#/components/requestBodies/reset_password_request"
        },
        "tags": [
          "Unscripted"
        ]
      },
      "parameters": []
    },
    "/api/1/auth/resetPassword": {
      "post": {
        "summary": "Unscripted Route",
        "operationId": "post-request-reset-password",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "reseting password",
        "requestBody": {
          "$ref": "#/components/requestBodies/rest_password"
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Token",
            "description": "Get the user generated token"
          }
        ],
        "tags": [
          "Unscripted "
        ]
      },
      "parameters": []
    },
    "/api/v1/auth/google": {
      "parameters": [],
      "get": {
        "summary": "Google Authentication",
        "operationId": "get-auth-google-auth",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "Get and Post to Google authentication Route",
        "tags": [
          "Google Auth"
        ]
      },
      "post": {
        "summary": "",
        "operationId": "postapi-v1-auth-google",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Get Google Auth Route"
      }
    },
    "/api/v1/auth/linkedin": {
      "parameters": [],
      "get": {
        "summary": "LinkedIn Authentication",
        "operationId": "get-auth-google-auth",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/success"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/success"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "Get Linkedin authentication Route",
        "tags": [
          "Linkedin Auth"
        ]
      }
    },
    "/api/v1/auth/linkedin/callback": {
      "parameters": [],
      "get": {
        "summary": "LinkedIn Authentication",
        "operationId": "get-auth-google-auth",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "description": "Get Linkedin authentication callback Route",
        "tags": [
          "Linkedin Auth"
        ]
      }
    },
    "/api/v1/auth/facebook": {
      "get": {
        "summary": "Facebook Authentication",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "get-facebook-callback",
        "description": "Gets Facebook authentication route",
        "tags": [
          "Facebook Auth"
        ]
      },
      "parameters": []
    },
    "/api/v1/auth/facebook/callback": {
      "get": {
        "summary": "Facebook Authentication",
        "responses": {
          "200": {
            "$ref": "#/components/responses/success"
          },
          "201": {
            "$ref": "#/components/responses/success"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "$ref": "#/components/responses/error"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "get-facebook-callback",
        "description": "Gets Facebook authentication callback route",
        "tags": [
          "Facebook Auth"
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {},
    "responses": {
      "error": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "success": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "api_signup": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "confirm_password": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password",
                "lastName",
                "firstName",
                "confirm_password",
                "language"
              ]
            }
          }
        },
        "description": ""
      },
      "api_login": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        }
      },
      "api_delete": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        }
      },
      "api_update": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "language"
              ]
            }
          }
        }
      },
      "reset_password_request": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        }
      },
      "rest_password": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "userId",
                "password"
              ]
            }
          },
          "application/xml": {
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "Auth_signup": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "name",
                "password",
                "confirmPassword",
                "displayName"
              ]
            }
          }
        }
      },
      "sendAudio": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                }
              },
              "required": [
                "conversationId",
                "userId",
                "file"
              ]
            }
          },
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "conversationId": {
                  "type": "string"
                }
              },
              "required": [
                "userId",
                "conversationId"
              ]
            }
          }
        },
        "description": "Parsed in the body form-data"
      }
    },
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer",
        "description": "Detele User Bearer Token"
      }
    }
  }
}